# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17x5jfTuIPnPh6XsCGKqY0PExYKzrp2Vi

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

for s, p, o in g1:
  print(s, p, o)
print("\n\n")
for s, p, o in g2:
  print(s, p, o)

from rdflib.plugins.sparql import prepareQuery
from rdflib.namespace import RDF
g3.namespace_manager.bind('owl', Namespace('http://www.w3.org/2002/07/owl#'), override=False)
g1.namespace_manager.bind('dt3', Namespace('http://data.three.org#'), override=False)
g1.namespace_manager.bind('vcard', Namespace('http://www.w3.org/2001/vcard-rdf/3.0#'), override=False)
g2.namespace_manager.bind('dt4', Namespace('http://data.four.org#'), override=False)
g2.namespace_manager.bind('vcard', Namespace('http://www.w3.org/2001/vcard-rdf/3.0#'), override=False)
dt3 = Namespace('http://data.three.org#')
dt4 = Namespace('http://data.four.org#')
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
OWL = Namespace("http://www.w3.org/2002/07/owl#")

lista_sujeto_nombre = []
for s, p, o in g1.triples((None, vcard.Given, None)):
  for s2, p2, o2 in g2.triples((None, vcard.Given, o)):
    lista_sujeto_nombre.append((s, s2))

lista_sujeto_family = []
for s, p, o in g1.triples((None, vcard.Family, None)):
  for s2, p2, o2 in g2.triples((None, vcard.Family, o)):
    lista_sujeto_family.append((s, s2))

for sujeto_nombre in lista_sujeto_nombre:
  if sujeto_nombre in lista_sujeto_family:
    g3.add((sujeto_nombre[0], OWL.sameAs, sujeto_nombre[1]))


for s, p, o in g3:
  print(s, p, o)